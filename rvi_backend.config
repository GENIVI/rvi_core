%% -*- erlang -*-

%% Copyright (C) 2014, Jaguar Land Rover
%%
%% This program is licensed under the terms and conditions of the
%% Mozilla Public License, version 2.0.  The full text of the 
%% Mozilla Public License is at https://www.mozilla.org/MPL/2.0/
%%
%% Configuration file for the (in-vehicle) IVI used by the hvac_demo
%% See ../hvac_demo/README.md for detai;s
%% 

%% -----------------------------------------------
%% See vehicle.config file for documentation and hints
%% -----------------------------------------------

%% Parameters for simpler modification
Env = fun(V, Def) ->
	      case os:getenv(V) of
		  false -> Def;
		  Str when is_integer(Def) -> list_to_integer(Str);
		  Str when is_atom(Def) -> list_to_atom(Str);
		  Str -> Str
	      end
      end.
Port = Env("RVI_PORT", 8800).
MyIP = Env("RVI_MYIP", "38.129.64.31").
LocalIP = Env("RVI_LOCALIP", "127.0.0.1").
IPPort = fun(IP, Port) ->
                 IP ++ ":" ++ integer_to_list(Port)
         end.
LogLevel = Env("RVI_LOGLEVEL", notice).

[
 {include_lib, "rvi/priv/config/rvi_common.config"},

 {env,
  [
   {lager, 
    [ { handlers, 
	[{lager_console_backend, LogLevel}]
	}
    ]
   },
      
   {rvi, 
    [
     { node_address, IPPort(MyIP, Port+7) }, 
     { node_service_prefix, "jaguarlandrover.com/cloud/"},


     { routing_rules,
       [
	%% Make sure to have a default if you don't want your message
	%% to error out immediately. With a default the message will 
	%% be queued until it times out, waiting for a remote node
	%% to connect and announce that it can handle the targeted service.
	{ "", 
	  [
	   { proto_bert_rpc, dlink_tcp_rpc}
	  ]
	}
       ]
     },
     
     {key_pair, {openssl_pem, "test_keys/jlr_com.pem"}},

     { components, 
       [
	{ service_edge, 
	  %% This is the URL that local services use to connect to 
	  %% the RVI system. It is also used by
	  %% the other components below to send inter-compoonent
	  %% JSON-RPC calls to the service edge. 
	  %%
	  %% For this component url and exo_http_opts should always be specified
	  %% so that local services have a HTTP port to connect to.
	  %%
	  %% gen_server can also be specified to enable faster, native erlang
	  %% inter compojnent communication.
	  %%
	  %% The host and address given in URL should route to the port given 
	  %% in exo_http_opts below.
	  %%
	  %% The web socket integrates with the rvi.js javascript code
	  %% that connects Tizen IVI to the RVI system.
	  [ { service_edge_rpc, gen_server,
	    [ 
	      { json_rpc_address, { LocalIP, Port+1 } },
	      { websocket, [ { port, Port+8}]}
	    ]
	    }
	  ]
	},
	{ service_discovery, 
	  [ { service_discovery_rpc, gen_server, 
	      [
	       { json_rpc_address, { LocalIP, Port+2 }}
	      ]
	    }
	  ]
	},
	{ schedule, 
	  [ { schedule_rpc, json_rpc, 
	      [
	       { json_rpc_address, { LocalIP, Port+3 }}
	      ]
	    }
	  ]
	},
	{ authorize, 
	  [ { authorize_rpc, gen_server,
	      [ 
		{ json_rpc_address, { LocalIP, Port+4 } }
	      ]
	    }
	  ]
	},
	{ protocol, 
	  [ { proto_bert_rpc, gen_server,
	      [ 
		{ json_rpc_address, { LocalIP, Port+5 } }
	      ]
	    }
	  ]
	},
	{ data_link, 
	  [ { dlink_tcp_rpc, gen_server,
	      [ 
		{ json_rpc_address, { LocalIP, Port+6 } },
		%% Bert_rpc server specifies the port we should
		%% listen to for incoming connections
		%% from other rvi nodes.
		%% A specific NIC address can also be specified
		%% through the {ip, "192.168.0.1" } tuple.
		{ bert_rpc_server, [ { port, Port+7 }]}
	      ]
	    }
	  ]
	}
       ]
     }
    ]}
]}

].
